name: Deploy Workflow

on:
   pull_request:
    branches: ["main"]

jobs:
  deploy:
    name: Deploy
    # needs: packer_build
    runs-on: ubuntu-latest
    env:
      aws-access-key-id: ${{ secrets.ACCESS_KEY }}
      aws-secret-access-key: ${{ secrets.SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      aws-dev-access-key-id: ${{ secrets.DEV_ACCESS_KEY }}
      aws-dev-secret-access-key: ${{ secrets.DEV_SECRET_KEY }}
      aws-demo-access-key-id: ${{ secrets.DEMO_ACCESS_KEY }}
      aws-demo-secret-access-key: ${{ secrets.DEMO_SECRET_KEY }}
      AWS_ENV: ${{ secrets.AWS_ENV }}
      ami_id: ami-0e43405435d9d6d61 # This is a placeholder value

    steps:
      - name: Debug AMI ID
        run: |
          echo "AMI ID: ${{ env.ami_id }}"

      - name: Configure dev AWS Credentials
        if: env.AWS_ENV == 'dev'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure demo AWS Credentials
        if: env.AWS_ENV == 'demo'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEMO_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.DEMO_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Launch Template
        run: |
          aws ec2 create-launch-template-version \
            --launch-template-data '{"ImageId":"${{ env.ami_id }}"}' \
            --source-version '$Latest' \
            --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }}

      - name: Start Instance Refresh
        id: start_refresh
        run: |
          REFRESH_ID=$(aws autoscaling start-instance-refresh --auto-scaling-group-name ${{ secrets.ASG_NAME }} --query 'InstanceRefreshId' --output text)
          echo "refresh_id=$REFRESH_ID" >> $GITHUB_OUTPUT

      - name: Wait for Instance Refresh
        run: |
          while true; do
            STATUS=$(aws autoscaling describe-instance-refreshes \
              --auto-scaling-group-name ${{ secrets.ASG_NAME }} \
              --instance-refresh-ids ${{ steps.start_refresh.outputs.refresh_id }} \
              --query 'InstanceRefreshes[0].Status' --output text)
            if [ "$STATUS" = "Successful" ]; then
              echo "Instance refresh completed successfully"
              exit 0
            elif [ "$STATUS" = "Failed" ]; then
              echo "Instance refresh failed"
              exit 1
            else
              echo "Instance refresh in progress. Current status: $STATUS"
              sleep 30
            fi
          done